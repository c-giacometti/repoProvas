// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String

  @@map("users")
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  tests Test[]

  disciplines Discipline[]
  teachers Teacher[]

  @@map("categories")
}

model Term {
  id     Int  @id @default(autoincrement())
  number Int  @unique
  disciplines Discipline[]

  @@map("terms")
}

model Discipline {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  termId Int
  term   Term @relation(fields: [termId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  teachersDisciplines teacherDiscipline[]

  categories Category[]
  teachers Teacher[]

  @@map("disciplines")
}

model Teacher {
  id   Int      @id @default(autoincrement())
  name String   @unique
  teachersDisciplines teacherDiscipline[]

  disciplines Discipline[]
  categories Category[]

  @@map("teachers")
}

model teacherDiscipline {
  id           Int        @id @default(autoincrement())
  teacherId    Int
  teacher      Teacher    @relation(fields: [teacherId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  disciplineId Int
  discipline   Discipline @relation(fields: [disciplineId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tests        Test[]

  @@unique([teacherId, disciplineId])
  @@map("teachersDisciplines")
}

model Test {
  id         Int    @id @default(autoincrement())
  name       String
  pdfUrl     String
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  teacherDisciplineId Int
  teachersDisciplines teacherDiscipline @relation(fields: [teacherDisciplineId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("tests")
}



